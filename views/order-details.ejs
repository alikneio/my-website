<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Order Details - #<%= order.id %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="/css/bootstrap.css" />
  <link rel="stylesheet" href="/css/custom.css" />
  <link rel="stylesheet" href="/css/bootstrap-icons/font/bootstrap-icons.css" />
  <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;700&display=swap" rel="stylesheet"/>

  <style>
    :root{
      --brand: #1266F1;          /* زرار أساسي أزرق مثل الموقع */
      --bg-soft: #f4f6fa;        /* خلفية فاتحة */
      --title: #1d3557;          /* لون العنوان */
      --text: #222;
      --muted: #6c757d;
    }
    body{ background: var(--bg-soft); font-family: 'Cairo', sans-serif; color: var(--text); }
    .order-wrapper{
      background:#fff;border-radius:16px;padding:1.75rem;box-shadow:0 8px 26px rgba(0,0,0,.06)
    }
    .section-title{ font-size:2rem;font-weight:800;color:var(--title); letter-spacing:.3px; }
    .kv-label{ font-weight:700;color:#495057;margin-bottom:.35rem }
    .kv-value{
      background:#f1f3f5;border-radius:10px;padding:.75rem 1rem;color:#212529;margin-bottom:1rem
    }
    .badge{ font-size:.95rem;padding:.45rem .9rem }
    .btn-brand{
      background:var(--brand); border-color:var(--brand); color:#fff
    }
    .btn-brand:hover{ filter:brightness(.95); color:#fff }
    .btn-ghost{
      background:#fff; border:1px solid #e6e9ef; color:#222
    }
    .actions{ gap:.5rem }
    .last-updated{ color:var(--muted); font-size:.9rem }
    @media (max-width: 768px){
      .section-title{ font-size:1.6rem }
      .order-wrapper{ padding:1.25rem }
    }
  </style>
</head>
<body>

  <%- include('partials/header') %>

  <main class="container my-5">
    <div class="order-wrapper">
      <div class="d-flex align-items-center justify-content-between flex-wrap mb-3">
        <h2 class="section-title mb-3 mb-md-0">Order Details</h2>

        <div class="d-flex align-items-center actions">
          <!-- Status badge -->
          <div id="status-badge" class="me-2">
            <% if (order.status === 'Accepted') { %>
              <span class="badge bg-success" id="order-status"><%= order.status %></span>
            <% } else if (order.status === 'Rejected') { %>
              <span class="badge bg-danger" id="order-status"><%= order.status %></span>
            <% } else { %>
              <span class="badge bg-warning text-dark" id="order-status"><%= order.status %></span>
            <% } %>
          </div>

          <!-- Refresh button -->
          <button id="refreshBtn" class="btn btn-brand d-inline-flex align-items-center">
            <span class="spinner-border spinner-border-sm me-2 d-none" role="status" aria-hidden="true" id="refreshSpinner"></span>
            <i class="bi bi-arrow-clockwise me-2" aria-hidden="true"></i>
            Refresh
          </button>
        </div>
      </div>

      <p class="last-updated mb-4">
        Last updated:
        <span id="lastUpdated"><%= new Date().toLocaleTimeString([], {hour:'2-digit', minute:'2-digit'}) %></span>
      </p>

      <div class="row">
        <div class="col-12 col-lg-6">
          <div class="kv-label">ORDER ID</div>
          <div class="kv-value"><%= order.id %></div>

          <div class="kv-label">PRODUCT</div>
          <div class="kv-value"><%= order.productName %></div>

          <div class="kv-label">PRICE</div>
          <div class="kv-value">$<%= parseFloat(order.price).toFixed(2) %></div>
        </div>

        <div class="col-12 col-lg-6">
          <div class="kv-label">DATE</div>
          <div class="kv-value"><%= new Date(order.purchaseDate).toLocaleString() %></div>

          <% if (order.order_details) { %>
            <div class="kv-label">DETAILS</div>
            <div class="kv-value"><%= order.order_details %></div>
          <% } %>

          <div class="kv-label">REPLY</div>
          <div class="kv-value" id="order-reply"><%= order.admin_reply || '—' %></div>
        </div>
      </div>

      <div class="mt-3">
        <a href="/my-orders" class="btn btn-ghost">
          <i class="bi bi-arrow-left me-2"></i> Back to Orders
        </a>
      </div>
    </div>
  </main>

  <%- include('partials/footer') %>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    (function () {
      const orderId = <%- JSON.stringify(order.id) %>;
      const $status = document.getElementById('order-status');
      const $reply  = document.getElementById('order-reply');
      const $last   = document.getElementById('lastUpdated');
      const $btn    = document.getElementById('refreshBtn');
      const $spin   = document.getElementById('refreshSpinner');

      let lastStatus = $status ? $status.textContent.trim() : '';
      let lastReply  = $reply  ? $reply.textContent.trim()  : '';

      function setLoading(on){
        if(!$btn || !$spin) return;
        if(on){
          $spin.classList.remove('d-none');
          $btn.setAttribute('disabled','disabled');
        }else{
          $spin.classList.add('d-none');
          $btn.removeAttribute('disabled');
        }
      }

      async function fetchStatus() {
        try {
          setLoading(true);
          const res = await fetch(`/order-details/${orderId}/status.json`, { cache: 'no-store' });
          if (!res.ok) return;
          const data = await res.json();
          if (!data.ok) return;

          // status text + badge color
          if (data.status && data.status !== lastStatus) {
            lastStatus = data.status;
            $status.textContent = data.status;

            $status.className = 'badge';
            if (data.status === 'Accepted') {
              $status.classList.add('bg-success');
            } else if (data.status === 'Rejected') {
              $status.classList.add('bg-danger');
            } else {
              $status.classList.add('bg-warning', 'text-dark');
            }
          }

          // reply
          const note = (data.admin_reply || '—').trim();
          if (note !== lastReply) {
            lastReply = note;
            $reply.textContent = note;
          }

          // last updated
          if ($last) {
            const now = new Date();
            $last.textContent = now.toLocaleTimeString([], {hour:'2-digit', minute:'2-digit'});
          }
        } catch (_) {
          // تجاهل الخطأ (اختياري: ممكن تعرض Toast)
        } finally {
          setLoading(false);
        }
      }

      // manual
      document.getElementById('refreshBtn')?.addEventListener('click', fetchStatus);

      // auto every 5s
      fetchStatus();
      setInterval(fetchStatus, 5000);
    })();
  </script>
</body>
</html>
